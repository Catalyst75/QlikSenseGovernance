Follow these steps to ensure the correct execution of this project:

1 - Create the client.pfx certificate (warning: I left a client.pfx file as an example. Overwrite it with the one you generate from your site.)
	- Go to your QMC->Certificates
	- My recommended configurations are:
		- blank password
		- include secrets key
		- file format: Windows format

2 - Ensure all required Node.js modules are installed. They should be in the 
    node_modules folder. Here is a list of mandatory node modules:
	- qsocks
	- request
	- js2xmlparser
	- fs
	- require
	- promise

    If a module is missing use the following command: npm install <module> --save

3 - On your command line run the following command:
    node apps-info.js -h

    Follow the helper instructions to extract your Qlik Sense Server applications
    information 

4 - Upon successful run check the 'AppStructures' folder for the resulting XML files

----------------------------------------------------------------------------------

Some command examples:
 * minimum information to work: node apps-info.js -a SenseDemo -ud SenseDemo -un Sense
 * full specification: node apps-info.js -a SenseDemo -c "C:\Nodejs-projects\Apps-Governance\client.pfx" -ud SenseDemo -un Sense -o localhost
 * single app: node apps-info.js -a SenseDemo -ud SenseDemo -un Sense -s 1d0c97e5-5884-4bb6-b4f8-1c0ec385fcbf

----------------------------------------------------------------------------------

Node files brief explanation:
 * apps-info.js - project executable with helper. Loads in sequence the files in 'lib'.
 * lib/app-list.js - gets the list of applications available in the server. Stores the DocumentsList.xml file.
 * lib/app-connections.js - gets the list of connections available to the user. Stores the DocumentsConnections.xml file.
 * lib/app-tables.js - gets the tables of the datamodel for each one of the applications. Stores a <application-id>_KeyTables.xml file.
 * lib/app-library-dimensions.js - gets the library dimensions for each one of the applications. Stores a <application-id>_LibraryDimensions_<dimension-id>.xml file.
 * lib/app-library-measures.js - gets the library measures for each of the applications. Stores a <application-id>_LibraryMeasures_<measure-id>.xml file.
 * lib/app-library-masterobjects.js - gets the library master objects for each of the aplications. Stores a <application-id>_LibraryMasterObjects_<master-object-id>.xml file.
 * lib/app-bookmarks.js - gets the bookmarks for each of the applications. Stores a <application-id>_Bookmarks_<bookmark-id>.xml file.
 * lib/app-sheets.js - gets the sheets and it's objects for each of the applications. Stores:
			 - a <application-id>_Sheet_<sheet-id>.xml file.
			 - a <application-id>_SheetObject_<sheet-id>_<sheet-object-id>.xml file.
 * lib/app-stories.js - gets the stories and it's contents for each of the applications. Stores:
			 - a <application-id>_Story_<story-id>.xml file.
			 - a <application-id>_StorySlide_<story-id>_<slide-id>.xml file.
			 - a <application-id>_StorySlideItems_<story-id>_<slide-id>.xml file. (represents all the items of a specific slide excelpt the snapshots)
			 - a <application-id>_StorySnapshot_<story-id>_<slide-id>_<snapshot-id>.xml file.